#include<Arduino.h>
const char PAGE_SETTINGS[] = "<!DOCTYPE html>\n<html>\n\n<head>\n<title>Doorman Configuration</title>\n</head>\n\n<body>\n<h1>Doorman Configuration Page</h1>\n<form id=\"configForm\">\n<table>\n<tr>\n<td>Apartment Door Bell Code</td>\n<td><input type=\"text\" name=\"CodeApartmentDoorBell\" maxlength=\"10\" required></td>\n</tr>\n<tr>\n<td>Entry Door Bell Code</td>\n<td><input type=\"text\" name=\"CodeEntryDoorBell\" maxlength=\"10\" required></td>\n</tr>\n<tr>\n<td>Handset Liftup Code</td>\n<td><input type=\"text\" name=\"CodeHandsetLiftup\" maxlength=\"10\" required></td>\n</tr>\n<tr>\n<td>Door Opener Code</td>\n<td><input type=\"text\" name=\"CodeDoorOpener\" maxlength=\"10\" required></td>\n</tr>\n<tr>\n<td>Apartment Door Pattern Detection Code<br />(When this pattern is detected, mqtt message will be\nsent)</td>\n<td><input type=\"text\" name=\"CodeApartmentPatternDetect\" required></td>\n</tr>\n<tr>\n<td>Entry Door Pattern Detection<br />(When this pattern is detected, door opener will be sent)</td>\n<td><input type=\"text\" name=\"CodeEntryPatternDetect\" maxlength=\"10\" required></td>\n</tr>\n<tr>\n<td>Entry Door Party Mode<br />(When this code is detected, the Door opener code is sent when party mode\nis enabled)</td>\n<td><input type=\"text\" name=\"CodePartyMode\" maxlength=\"10\" required></td>\n</tr>\n</table>\n<br>\n<input type=\"submit\" value=\"Save Configuration\">\n</form>\n<div id=\"feedback\"></div>\n\n<script>\n// Function to fetch and populate the configuration data\nfunction populateConfig() {\n// Fetch the current configuration from the ESP8266\nfetch('/getConfig', {\nmethod: 'GET',\n})\n.then(response => response.json())\n.then(data => {\n// Populate the input fields with the retrieved values\ndocument.getElementById(\"configForm\").elements[\"CodeApartmentDoorBell\"].value = data.CodeApartmentDoorBell.toString(16).padStart(8, '0');\ndocument.getElementById(\"configForm\").elements[\"CodeEntryDoorBell\"].value = data.CodeEntryDoorBell.toString(16).padStart(8, '0');\ndocument.getElementById(\"configForm\").elements[\"CodeHandsetLiftup\"].value = data.CodeHandsetLiftup.toString(16).padStart(8, '0');\ndocument.getElementById(\"configForm\").elements[\"CodeDoorOpener\"].value = data.CodeDoorOpener.toString(16).padStart(8, '0');\ndocument.getElementById(\"configForm\").elements[\"CodeApartmentPatternDetect\"].value = data.CodeApartmentPatternDetect.toString(16).padStart(8, '0');\ndocument.getElementById(\"configForm\").elements[\"CodeEntryPatternDetect\"].value = data.CodeEntryPatternDetect.toString(16).padStart(8, '0');\ndocument.getElementById(\"configForm\").elements[\"CodePartyMode\"].value = data.CodePartyMode.toString(16).padStart(8, '0');\n})\n.catch(error => {\nconsole.error('Error:', error);\nconst feedbackDiv = document.getElementById(\"feedback\");\nfeedbackDiv.textContent = \"An error occurred while fetching the configuration.\";\n});\n}\n\n// Call the function to populate the configuration on page load\nwindow.addEventListener('load', populateConfig);\n\n// Handle form submission\ndocument.getElementById(\"configForm\").onsubmit = function (event) {\nevent.preventDefault(); // Prevent form from submitting normally\n\n// Get form data\nconst formData = new FormData(event.target);\n\n// Convert form data to a JSON object\nconst configData = {};\nformData.forEach((value, key) => {\nconfigData[key] = parseInt(value, 16);\n});\n\n\n// Send the configuration data to the server (ESP8266)\nfetch('/setConfig', {\nmethod: 'POST',\nheaders: {\n'Content-Type': 'application/json'\n},\nbody: JSON.stringify(configData)\n})\n.then(response => response.json())\n.then(data => {\n// Display feedback to the user\nconst feedbackDiv = document.getElementById(\"feedback\");\nfeedbackDiv.textContent = data.message;\n})\n.catch(error => {\nconsole.error('Error:', error);\nconst feedbackDiv = document.getElementById(\"feedback\");\nfeedbackDiv.textContent = \"An error occurred while saving the configuration.\";\n});\n};\n</script>\n</body>\n\n</html>";
